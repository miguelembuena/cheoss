package org.cheoss.util;


public class Pieces implements Constants{
	
	public static boolean isWhite(int piece) {
		return (piece % 2 == 0);
	}
        
    // convenience piece functions  	
    public final static boolean isPawn(int piece) {
    	return piece == WPAWN || piece == BPAWN;
    }
    
    public final static boolean isKnight(int piece) {
    	return piece == WKNIGHT || piece == BKNIGHT;
    }
    
    public final static boolean isBishop(int piece) {
    	return piece == WBISHOP || piece == BBISHOP;
    }
    
    public final static boolean isRook(int piece) {
    	return piece == WROOK || piece == BROOK;
    }
    
    public final static boolean isQueen(int piece) {
    	return piece == WQUEEN || piece == BQUEEN;
    }
    
    public final static boolean isKing(int piece) {
    	return piece == WKING || piece == BKING;
    }
    

	
	public static final int[][] ROOK_DIRECTIONS = { 
		{},{},{},{},{},{},{},{},{},{},
		{},{},{},{},{},{},{},{},{},{},
		{},{},{},{},{},{},
		{38,50,62,74,86,98,110,-1,27,28,29,30,31,32,33},					//26
		{39,51,63,75,87,99,111,-1,28,29,30,31,32,33,-1,26},					//27
		{40,52,64,76,88,100,112,-1,29,30,31,32,33,-1,27,26},					//28
		{41,53,65,77,89,101,113,-1,30,31,32,33,-1,28,27,26},					//29
		{42,54,66,78,90,102,114,-1,31,32,33,-1,29,28,27,26},					//30
		{43,55,67,79,91,103,115,-1,32,33,-1,30,29,28,27,26},					//31
		{44,56,68,80,92,104,116,-1,33,-1,31,30,29,28,27,26},					//32
		{45,57,69,81,93,105,117,-1,32,31,30,29,28,27,26},					//33
		{},{},{},{},
		{50,62,74,86,98,110,-1,26,-1,39,40,41,42,43,44,45},					//38
		{51,63,75,87,99,111,-1,27,-1,40,41,42,43,44,45,-1,38},					//39
		{52,64,76,88,100,112,-1,28,-1,41,42,43,44,45,-1,39,38},					//40
		{53,65,77,89,101,113,-1,29,-1,42,43,44,45,-1,40,39,38},					//41
		{54,66,78,90,102,114,-1,30,-1,43,44,45,-1,41,40,39,38},					//42
		{55,67,79,91,103,115,-1,31,-1,44,45,-1,42,41,40,39,38},					//43
		{56,68,80,92,104,116,-1,32,-1,45,-1,43,42,41,40,39,38},					//44
		{57,69,81,93,105,117,-1,33,-1,44,43,42,41,40,39,38},					//45
		{},{},{},{},
		{62,74,86,98,110,-1,38,26,-1,51,52,53,54,55,56,57},					//50
		{63,75,87,99,111,-1,39,27,-1,52,53,54,55,56,57,-1,50},					//51
		{64,76,88,100,112,-1,40,28,-1,53,54,55,56,57,-1,51,50},					//52
		{65,77,89,101,113,-1,41,29,-1,54,55,56,57,-1,52,51,50},					//53
		{66,78,90,102,114,-1,42,30,-1,55,56,57,-1,53,52,51,50},					//54
		{67,79,91,103,115,-1,43,31,-1,56,57,-1,54,53,52,51,50},					//55
		{68,80,92,104,116,-1,44,32,-1,57,-1,55,54,53,52,51,50},					//56
		{69,81,93,105,117,-1,45,33,-1,56,55,54,53,52,51,50},					//57
		{},{},{},{},
		{74,86,98,110,-1,50,38,26,-1,63,64,65,66,67,68,69},					//62
		{75,87,99,111,-1,51,39,27,-1,64,65,66,67,68,69,-1,62},					//63
		{76,88,100,112,-1,52,40,28,-1,65,66,67,68,69,-1,63,62},					//64
		{77,89,101,113,-1,53,41,29,-1,66,67,68,69,-1,64,63,62},					//65
		{78,90,102,114,-1,54,42,30,-1,67,68,69,-1,65,64,63,62},					//66
		{79,91,103,115,-1,55,43,31,-1,68,69,-1,66,65,64,63,62},					//67
		{80,92,104,116,-1,56,44,32,-1,69,-1,67,66,65,64,63,62},					//68
		{81,93,105,117,-1,57,45,33,-1,68,67,66,65,64,63,62},					//69
		{},{},{},{},
		{86,98,110,-1,62,50,38,26,-1,75,76,77,78,79,80,81},					//74
		{87,99,111,-1,63,51,39,27,-1,76,77,78,79,80,81,-1,74},					//75
		{88,100,112,-1,64,52,40,28,-1,77,78,79,80,81,-1,75,74},					//76
		{89,101,113,-1,65,53,41,29,-1,78,79,80,81,-1,76,75,74},					//77
		{90,102,114,-1,66,54,42,30,-1,79,80,81,-1,77,76,75,74},					//78
		{91,103,115,-1,67,55,43,31,-1,80,81,-1,78,77,76,75,74},					//79
		{92,104,116,-1,68,56,44,32,-1,81,-1,79,78,77,76,75,74},					//80
		{93,105,117,-1,69,57,45,33,-1,80,79,78,77,76,75,74},					//81
		{},{},{},{},
		{98,110,-1,74,62,50,38,26,-1,87,88,89,90,91,92,93},					//86
		{99,111,-1,75,63,51,39,27,-1,88,89,90,91,92,93,-1,86},					//87
		{100,112,-1,76,64,52,40,28,-1,89,90,91,92,93,-1,87,86},					//88
		{101,113,-1,77,65,53,41,29,-1,90,91,92,93,-1,88,87,86},					//89
		{102,114,-1,78,66,54,42,30,-1,91,92,93,-1,89,88,87,86},					//90
		{103,115,-1,79,67,55,43,31,-1,92,93,-1,90,89,88,87,86},					//91
		{104,116,-1,80,68,56,44,32,-1,93,-1,91,90,89,88,87,86},					//92
		{105,117,-1,81,69,57,45,33,-1,92,91,90,89,88,87,86},					//93
		{},{},{},{},
		{110,-1,86,74,62,50,38,26,-1,99,100,101,102,103,104,105},					//98
		{111,-1,87,75,63,51,39,27,-1,100,101,102,103,104,105,-1,98},					//99
		{112,-1,88,76,64,52,40,28,-1,101,102,103,104,105,-1,99,98},					//100
		{113,-1,89,77,65,53,41,29,-1,102,103,104,105,-1,100,99,98},					//101
		{114,-1,90,78,66,54,42,30,-1,103,104,105,-1,101,100,99,98},					//102
		{115,-1,91,79,67,55,43,31,-1,104,105,-1,102,101,100,99,98},					//103
		{116,-1,92,80,68,56,44,32,-1,105,-1,103,102,101,100,99,98},					//104
		{117,-1,93,81,69,57,45,33,-1,104,103,102,101,100,99,98},					//105
		{},{},{},{},
		{98,86,74,62,50,38,26,-1,111,112,113,114,115,116,117},					//110
		{99,87,75,63,51,39,27,-1,112,113,114,115,116,117,-1,110},					//111
		{100,88,76,64,52,40,28,-1,113,114,115,116,117,-1,111,110},					//112
		{101,89,77,65,53,41,29,-1,114,115,116,117,-1,112,111,110},					//113
		{102,90,78,66,54,42,30,-1,115,116,117,-1,113,112,111,110},					//114
		{103,91,79,67,55,43,31,-1,116,117,-1,114,113,112,111,110},					//115
		{104,92,80,68,56,44,32,-1,117,-1,115,114,113,112,111,110},					//116
		{105,93,81,69,57,45,33,-1,116,115,114,113,112,111,110},					//117
	};


	public static final int[][] BISHOP_DIRECTIONS = { 
		{},{},{},{},{},{},{},{},{},{},
		{},{},{},{},{},{},{},{},{},{},
		{},{},{},{},{},{},		
		{39,52,65,78,91,104,117},					//26
		{38,-1,40,53,66,79,92,105},					//27
		{39,50,-1,41,54,67,80,93},					//28
		{40,51,62,-1,42,55,68,81},					//29
		{41,52,63,74,-1,43,56,69},					//30
		{42,53,64,75,86,-1,44,57},					//31
		{43,54,65,76,87,98,-1,45},					//32
		{44,55,66,77,88,99,110},					//33
		{},{},{},{},
		{27,-1,51,64,77,90,103,116},					//38
		{50,-1,28,-1,52,65,78,91,104,117,-1,26},					//39
		{51,62,-1,29,-1,53,66,79,92,105,-1,27},					//40
		{52,63,74,-1,30,-1,54,67,80,93,-1,28},					//41
		{53,64,75,86,-1,31,-1,55,68,81,-1,29},					//42
		{54,65,76,87,98,-1,32,-1,56,69,-1,30},					//43
		{55,66,77,88,99,110,-1,33,-1,57,-1,31},					//44
		{56,67,78,89,100,111,-1,32},					//45
		{},{},{},{},
		{39,28,-1,63,76,89,102,115},					//50
		{62,-1,40,29,-1,64,77,90,103,116,-1,38},					//51
		{63,74,-1,41,30,-1,65,78,91,104,117,-1,39,26},					//52
		{64,75,86,-1,42,31,-1,66,79,92,105,-1,40,27},					//53
		{65,76,87,98,-1,43,32,-1,67,80,93,-1,41,28},					//54
		{66,77,88,99,110,-1,44,33,-1,68,81,-1,42,29},					//55
		{67,78,89,100,111,-1,45,-1,69,-1,43,30},					//56
		{68,79,90,101,112,-1,44,31},					//57
		{},{},{},{},
		{51,40,29,-1,75,88,101,114},					//62
		{74,-1,52,41,30,-1,76,89,102,115,-1,50},					//63
		{75,86,-1,53,42,31,-1,77,90,103,116,-1,51,38},					//64
		{76,87,98,-1,54,43,32,-1,78,91,104,117,-1,52,39,26},					//65
		{77,88,99,110,-1,55,44,33,-1,79,92,105,-1,53,40,27},					//66
		{78,89,100,111,-1,56,45,-1,80,93,-1,54,41,28},					//67
		{79,90,101,112,-1,57,-1,81,-1,55,42,29},					//68
		{80,91,102,113,-1,56,43,30},					//69
		{},{},{},{},
		{63,52,41,30,-1,87,100,113},					//74
		{86,-1,64,53,42,31,-1,88,101,114,-1,62},					//75
		{87,98,-1,65,54,43,32,-1,89,102,115,-1,63,50},					//76
		{88,99,110,-1,66,55,44,33,-1,90,103,116,-1,64,51,38},					//77
		{89,100,111,-1,67,56,45,-1,91,104,117,-1,65,52,39,26},					//78
		{90,101,112,-1,68,57,-1,92,105,-1,66,53,40,27},					//79
		{91,102,113,-1,69,-1,93,-1,67,54,41,28},					//80
		{92,103,114,-1,68,55,42,29},					//81
		{},{},{},{},
		{75,64,53,42,31,-1,99,112},					//86
		{98,-1,76,65,54,43,32,-1,100,113,-1,74},					//87
		{99,110,-1,77,66,55,44,33,-1,101,114,-1,75,62},					//88
		{100,111,-1,78,67,56,45,-1,102,115,-1,76,63,50},					//89
		{101,112,-1,79,68,57,-1,103,116,-1,77,64,51,38},					//90
		{102,113,-1,80,69,-1,104,117,-1,78,65,52,39,26},					//91
		{103,114,-1,81,-1,105,-1,79,66,53,40,27},					//92
		{104,115,-1,80,67,54,41,28},					//93
		{},{},{},{},
		{87,76,65,54,43,32,-1,111},					//98
		{110,-1,88,77,66,55,44,33,-1,112,-1,86},					//99
		{111,-1,89,78,67,56,45,-1,113,-1,87,74},					//100
		{112,-1,90,79,68,57,-1,114,-1,88,75,62},					//101
		{113,-1,91,80,69,-1,115,-1,89,76,63,50},					//102
		{114,-1,92,81,-1,116,-1,90,77,64,51,38},					//103
		{115,-1,93,-1,117,-1,91,78,65,52,39,26},					//104
		{116,-1,92,79,66,53,40,27},					//105
		{},{},{},{},
		{99,88,77,66,55,44,33},					//110
		{100,89,78,67,56,45,-1,98},					//111
		{101,90,79,68,57,-1,99,86},					//112
		{102,91,80,69,-1,100,87,74},					//113
		{103,92,81,-1,101,88,75,62},					//114
		{104,93,-1,102,89,76,63,50},					//115
		{105,-1,103,90,77,64,51,38},					//116
		{104,91,78,65,52,39,26}					//117
	};
  	//d2 es 101, h6 es 57
  	

	// el orden en este array importa y mucho, por ej. caso test_mate
	public static final int[][] KNIGHT_DIRECTIONS = { 
		{},{},{},{},{},{},{},{},{},{},
		{},{},{},{},{},{},{},{},{},{},
		{},{},{},{},{},{},
			{40,51},					//26
			{41,50,52},					//27
			{38,42,51,53},					//28
			{39,43,52,54},					//29
			{40,44,53,55},					//30
			{41,45,54,56},					//31
			{42,55,57},					//32
			{43,56},					//33
			{},{},{},{},
			{28,52,63},					//38
			{29,53,62,64},					//39
			{50,30,54,26,63,65},					//40
			{51,31,55,27,64,66},					//41
			{52,32,56,28,65,67},					//42
			{53,33,57,29,66,68},					//43
			{54,30,67,69},					//44
			{55,31,68},					//45
			{},{},{},{},
			{40,64,27,75},					//50
			{41,65,74,28,76,26},					//51
			{62,42,66,38,75,29,77,27},					//52
			{63,43,67,39,76,30,78,28},					//53
			{64,44,68,40,77,31,79,29},					//54
			{65,45,69,41,78,32,80,30},					//55
			{66,42,79,33,81,31},					//56
			{67,43,80,32},					//57
			{},{},{},{},
			{52,76,39,87},					//62
			{53,77,86,40,88,38},					//63
			{74,54,78,50,87,41,89,39},					//64
			{75,55,79,51,88,42,90,40},					//65
			{76,56,80,52,89,43,91,41},					//66 ojo con position_mate de test
			{77,57,81,53,90,44,92,42},					//67
			{78,54,91,45,93,43},					//68
			{79,55,92,44},					//69
			{},{},{},{},
			{64,88,51,99},					//74
			{65,89,98,52,100,50},					//75
			{86,66,90,62,99,53,101,51},					//76
			{87,67,91,63,100,54,102,52},					//77
			{88,68,92,64,101,55,103,53},					//78
			{89,69,93,65,102,56,104,54},					//79
			{90,66,103,57,105,55},					//80
			{91,67,104,56},					//81
			{},{},{},{},
			{76,100,63,111},					//86
			{77,101,110,64,112,62},					//87
			{98,78,102,74,111,65,113,63},					//88
			{99,79,103,75,112,66,114,64},					//89
			{100,80,104,76,113,67,115,65},					//90
			{101,81,105,77,114,68,116,66},					//91
			{102,78,115,69,117,67},					//92
			{103,79,116,68},					//93
			{},{},{},{},
			{88,112,75},					//98
			{89,113,76,74},					//99
			{110,90,114,86,77,75},					//100
			{111,91,115,87,78,76},					//101
			{112,92,116,88,79,77},					//102
			{113,93,117,89,80,78},					//103
			{114,90,81,79},					//104
			{115,91,80},					//105
			{},{},{},{},
			{100,87},					//110
			{101,88,86},					//111
			{102,98,89,87},					//112
			{103,99,90,88},					//113
			{104,100,91,89},					//114
			{105,101,92,90},					//115
			{102,93,91},					//116
			{103,92}					//117
	};
	
	/*
	// 0 	para 2 capturas + normal (cualquiera no extremos, ni sea 2 ni 7, ni 5)	
	// 1 	para 2 capturas + salto + normal (no extremo, 2 fila)		
	// 2 	para 1 captura + salto + normal  (en el extremo y 2ª fila)	
	// 3	para 1 captura + normal (cualquiera de los extremos que no sea 2 ni 7, ni 5)	
	// 4 	para 1 captura* + promotion (extremo y 7)	
	// 5 	para 2 capturas** + promotion (no extremo y 7)	
	// 6	para 1 captura + normal (cualquiera de los extremos que sea 5 fila) puede al paso	
	// 7 	para 2 capturas + normal (cualquiera no extremos, que sea 5 fila) puede al paso
	
	public static final int[][] BLACK_PAWN_DIRECTIONS = { 
		{},{},{},{},{},{},{},{},{},{},
		{},{},{},{},{},{},{},{},{},{},
		{},{},{},{},{},{},{},{},{},{},
		{},{},{},{},{},{},{},{},
		{2,51,62,50,OUT},					//38* JUMPS  
		{1,52,50,63,51,OUT},					//39*
		{1,53,51,64,52,OUT},					//40*
		{1,54,52,65,53,OUT},					//41*
		{1,55,53,66,54,OUT},					//42*
		{1,56,54,67,55,OUT},					//43*
		{1,57,55,68,56,OUT},					//44*
		{2,56,69,57,OUT},					//45*
		{},{},{},{},
		{3,63,62,OUT},					//50
		{0,64,62,63,OUT},					//51
		{0,65,63,64,OUT},					//52
		{0,66,64,65,OUT},					//53
		{0,67,65,66,OUT},					//54
		{0,68,66,67,OUT},					//55
		{0,69,67,68,OUT},					//56
		{3,68,69,OUT},					//57
		{},{},{},{},
		{3,75,74,OUT},					//62
		{0,76,74,75,OUT},					//63
		{0,77,75,76,OUT},					//64
		{0,78,76,77,OUT},					//65
		{0,79,77,78,OUT},					//66
		{0,80,78,79,OUT},					//67
		{0,81,79,80,OUT},					//68
		{3,80,81,OUT},					//69
		{},{},{},{},
		{6,87,86,OUT},					//74
		{7,88,86,87,OUT},					//75
		{7,89,87,88,OUT},					//76
		{7,90,88,89,OUT},					//77
		{7,91,89,90,OUT},					//78
		{7,92,90,91,OUT},					//79
		{7,93,91,92,OUT},					//80
		{6,92,93,OUT},					//81
		{},{},{},{},
		{3,99,98,OUT},					//86
		{0,100,98,99,OUT},					//87
		{0,101,99,100,OUT},					//88
		{0,102,100,101,OUT},					//89
		{0,103,101,102,OUT},					//90
		{0,104,102,103,OUT},					//91
		{0,103,104,OUT},					//92
		{3,104,105,OUT},					//93
		{},{},{},{},
		{4,111,110,OUT},					//98* PROMOTIONS
		{5,112,110,111,OUT},					//99*
		{5,113,111,112,OUT},					//100*
		{5,114,112,113,OUT},					//101*
		{5,115,113,114,OUT},					//102*
		{5,116,114,115,OUT},					//103*
		{5,117,115,116,OUT},					//104*
		{4,116,117, OUT}					//105*
	};
*/	
	


}
